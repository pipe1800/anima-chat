-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.character_definitions (
  character_id uuid NOT NULL,
  greeting text,
  description text,
  personality_summary text NOT NULL,
  scenario jsonb,
  model_id text,
  CONSTRAINT character_definitions_pkey PRIMARY KEY (character_id),
  CONSTRAINT character_definitions_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.character_favorites (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  character_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT character_favorites_pkey PRIMARY KEY (id),
  CONSTRAINT character_favorites_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.character_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  character_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT character_likes_pkey PRIMARY KEY (id),
  CONSTRAINT character_likes_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.character_memories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  character_id uuid NOT NULL,
  chat_id uuid NOT NULL,
  summary_content text NOT NULL,
  trigger_keywords ARRAY NOT NULL,
  message_count integer NOT NULL,
  input_token_cost integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_auto_summary boolean DEFAULT false,
  name text,
  CONSTRAINT character_memories_pkey PRIMARY KEY (id),
  CONSTRAINT character_memories_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT character_memories_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT character_memories_chat_id_fkey FOREIGN KEY (chat_id) REFERENCES public.chats(id)
);
CREATE TABLE public.character_tags (
  character_id uuid NOT NULL,
  tag_id integer NOT NULL,
  CONSTRAINT character_tags_pkey PRIMARY KEY (character_id, tag_id),
  CONSTRAINT character_tags_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT character_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(id)
);
CREATE TABLE public.character_world_info_link (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  character_id uuid NOT NULL,
  world_info_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT character_world_info_link_pkey PRIMARY KEY (id),
  CONSTRAINT character_world_info_link_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT character_world_info_link_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id)
);
CREATE TABLE public.characters (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id uuid NOT NULL,
  name text NOT NULL,
  short_description text,
  avatar_url text,
  visibility text NOT NULL DEFAULT 'private'::text CHECK (visibility = ANY (ARRAY['public'::text, 'unlisted'::text, 'private'::text])),
  interaction_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  tagline text,
  CONSTRAINT characters_pkey PRIMARY KEY (id),
  CONSTRAINT characters_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES auth.users(id)
);
CREATE TABLE public.chat_context (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  character_id uuid NOT NULL,
  chat_id uuid NOT NULL UNIQUE,
  current_context jsonb NOT NULL DEFAULT '{"mood": null, "clothing": null, "location": null, "relationship": null, "time_weather": null, "urgency_level": null, "conversation_tone": null, "character_position": null}'::jsonb,
  last_updated_by_message_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT chat_context_pkey PRIMARY KEY (id),
  CONSTRAINT chat_context_chat_id_fkey FOREIGN KEY (chat_id) REFERENCES public.chats(id),
  CONSTRAINT chat_context_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT chat_context_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT chat_context_last_updated_by_message_id_fkey FOREIGN KEY (last_updated_by_message_id) REFERENCES public.messages(id)
);
CREATE TABLE public.chats (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  character_id uuid NOT NULL,
  title text,
  last_message_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  selected_persona_id uuid,
  context_ceiling_warned boolean DEFAULT false,
  chat_mode text NOT NULL DEFAULT 'storytelling'::text CHECK (chat_mode = ANY (ARRAY['storytelling'::text, 'companion'::text])),
  CONSTRAINT chats_pkey PRIMARY KEY (id),
  CONSTRAINT fk_chats_selected_persona FOREIGN KEY (selected_persona_id) REFERENCES public.personas(id),
  CONSTRAINT chats_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT chats_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.credit_pack_purchases (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  credit_pack_id uuid NOT NULL,
  paypal_order_id text UNIQUE,
  amount_paid numeric NOT NULL,
  credits_granted integer NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'completed'::text, 'failed'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT credit_pack_purchases_pkey PRIMARY KEY (id),
  CONSTRAINT credit_pack_purchases_credit_pack_id_fkey FOREIGN KEY (credit_pack_id) REFERENCES public.credit_packs(id),
  CONSTRAINT credit_pack_purchases_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.credit_packs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  price numeric NOT NULL,
  credits_granted integer NOT NULL,
  description text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT credit_packs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.credits (
  user_id uuid NOT NULL,
  balance integer NOT NULL DEFAULT 0,
  CONSTRAINT credits_pkey PRIMARY KEY (user_id),
  CONSTRAINT credits_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  chat_id uuid NOT NULL,
  author_id uuid,
  is_ai_message boolean NOT NULL DEFAULT false,
  content text NOT NULL,
  token_cost integer,
  model_id text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  current_context jsonb,
  message_order integer NOT NULL DEFAULT 1,
  is_placeholder boolean DEFAULT false,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_chat_id_fkey FOREIGN KEY (chat_id) REFERENCES public.chats(id),
  CONSTRAINT messages_author_id_fkey FOREIGN KEY (author_id) REFERENCES auth.users(id)
);
CREATE TABLE public.models (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tier_name text NOT NULL UNIQUE,
  credit_multiplier numeric NOT NULL DEFAULT 1,
  is_nsfw_compatible boolean NOT NULL DEFAULT false,
  min_plan_id uuid,
  description text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  model_identifier text NOT NULL DEFAULT ''::text,
  max_context_tokens integer NOT NULL DEFAULT 8192,
  CONSTRAINT models_pkey PRIMARY KEY (id),
  CONSTRAINT models_min_plan_id_fkey FOREIGN KEY (min_plan_id) REFERENCES public.plans(id)
);
CREATE TABLE public.onboarding_checklist_items (
  id integer NOT NULL DEFAULT nextval('onboarding_checklist_items_id_seq'::regclass),
  task_key text NOT NULL UNIQUE,
  title text NOT NULL,
  description text,
  reward_credits integer NOT NULL DEFAULT 0,
  CONSTRAINT onboarding_checklist_items_pkey PRIMARY KEY (id)
);
CREATE TABLE public.personas (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  name text NOT NULL,
  bio text,
  lore text,
  avatar_url text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT personas_pkey PRIMARY KEY (id)
);
CREATE TABLE public.plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  price_monthly numeric,
  monthly_credits_allowance integer NOT NULL DEFAULT 0,
  features jsonb,
  is_active boolean NOT NULL DEFAULT true,
  paypal_subscription_id text,
  CONSTRAINT plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  username text NOT NULL UNIQUE,
  avatar_url text,
  bio text,
  onboarding_completed boolean NOT NULL DEFAULT false,
  onboarding_survey_data jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  default_persona_id uuid,
  timezone text DEFAULT 'UTC'::text,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT fk_profiles_default_persona FOREIGN KEY (default_persona_id) REFERENCES public.personas(id)
);
CREATE TABLE public.public_app_settings (
  setting_key text NOT NULL,
  setting_value text NOT NULL,
  CONSTRAINT public_app_settings_pkey PRIMARY KEY (setting_key)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  plan_id uuid NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['active'::text, 'past_due'::text, 'canceled'::text, 'trialing'::text])),
  current_period_end timestamp with time zone NOT NULL,
  paypal_subscription_id text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.tags (
  id integer NOT NULL DEFAULT nextval('tags_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  CONSTRAINT tags_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_age_verification (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  verified_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_age_verification_pkey PRIMARY KEY (id),
  CONSTRAINT user_age_verification_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_character_addons_backup (
  id uuid,
  user_id uuid,
  character_id uuid,
  addon_settings jsonb,
  created_at timestamp with time zone,
  updated_at timestamp with time zone
);
CREATE TABLE public.user_character_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  character_id uuid NOT NULL,
  chat_mode text NOT NULL DEFAULT 'storytelling'::text CHECK (chat_mode = ANY (ARRAY['storytelling'::text, 'companion'::text])),
  time_awareness_enabled boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_character_settings_pkey PRIMARY KEY (id),
  CONSTRAINT user_character_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_character_settings_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.user_character_world_info_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  character_id uuid NOT NULL,
  world_info_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_character_world_info_settings_pkey PRIMARY KEY (id),
  CONSTRAINT user_character_world_info_settings_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id),
  CONSTRAINT user_character_world_info_settings_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id),
  CONSTRAINT user_character_world_info_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_character_world_info_settings_backup (
  id uuid,
  user_id uuid,
  character_id uuid,
  world_info_id uuid,
  created_at timestamp with time zone,
  updated_at timestamp with time zone
);
CREATE TABLE public.user_global_chat_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  dynamic_world_info boolean DEFAULT false,
  enhanced_memory boolean DEFAULT false,
  mood_tracking boolean DEFAULT true,
  clothing_inventory boolean DEFAULT true,
  location_tracking boolean DEFAULT true,
  time_and_weather boolean DEFAULT false,
  relationship_status boolean DEFAULT false,
  character_position boolean DEFAULT false,
  chain_of_thought boolean DEFAULT false,
  few_shot_examples boolean DEFAULT false,
  streaming_mode character varying DEFAULT 'smooth'::character varying CHECK (streaming_mode::text = ANY (ARRAY['instant'::character varying::text, 'smooth'::character varying::text])),
  font_size character varying DEFAULT 'normal'::character varying CHECK (font_size::text = ANY (ARRAY['small'::character varying::text, 'normal'::character varying::text, 'large'::character varying::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  nsfw_enabled boolean DEFAULT false,
  CONSTRAINT user_global_chat_settings_pkey PRIMARY KEY (id),
  CONSTRAINT user_global_chat_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_onboarding_progress (
  user_id uuid NOT NULL,
  task_id integer NOT NULL,
  completed_at timestamp with time zone,
  CONSTRAINT user_onboarding_progress_pkey PRIMARY KEY (user_id, task_id),
  CONSTRAINT user_onboarding_progress_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_onboarding_progress_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.onboarding_checklist_items(id)
);
CREATE TABLE public.world_info_entries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  world_info_id uuid NOT NULL,
  keywords ARRAY NOT NULL,
  entry_text text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT world_info_entries_pkey PRIMARY KEY (id),
  CONSTRAINT world_info_entries_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id)
);
CREATE TABLE public.world_info_favorites (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  world_info_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT world_info_favorites_pkey PRIMARY KEY (id),
  CONSTRAINT world_info_favorites_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id)
);
CREATE TABLE public.world_info_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  world_info_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT world_info_likes_pkey PRIMARY KEY (id),
  CONSTRAINT world_info_likes_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id)
);
CREATE TABLE public.world_info_tags (
  world_info_id uuid NOT NULL,
  tag_id integer NOT NULL,
  CONSTRAINT world_info_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(id),
  CONSTRAINT world_info_tags_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id)
);
CREATE TABLE public.world_info_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  world_info_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT world_info_users_pkey PRIMARY KEY (id),
  CONSTRAINT world_info_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT world_info_users_world_info_id_fkey FOREIGN KEY (world_info_id) REFERENCES public.world_infos(id)
);
CREATE TABLE public.world_infos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id uuid NOT NULL,
  name text NOT NULL,
  short_description text,
  visibility text NOT NULL DEFAULT 'private'::text CHECK (visibility = ANY (ARRAY['public'::text, 'unlisted'::text, 'private'::text])),
  interaction_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT world_infos_pkey PRIMARY KEY (id),
  CONSTRAINT world_infos_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES auth.users(id)
);